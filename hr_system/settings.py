"""
Django settings for hr_system project.

Generated by 'django-admin startproject' using Django 4.2.23.
Enhanced for HR System with django-unfold admin interface.
"""

from pathlib import Path
from decouple import config
import os
from django.templatetags.static import static
from django.urls import reverse_lazy

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Security settings from environment variables
SECRET_KEY = config('SECRET_KEY', default='django-insecure-3bf2r@)=x46rqjvm63k*7=^$v5j5o!v3vm5xge3pzv+yk6)qj_')
DEBUG = config('DEBUG', default=True, cast=bool)
ALLOWED_HOSTS = config('ALLOWED_HOSTS', default='localhost,127.0.0.1').split(',')

# Application definition
INSTALLED_APPS = [
    # Django Unfold - Must be first for admin override
    'unfold',
    'unfold.contrib.filters',
    'unfold.contrib.forms',
    'unfold.contrib.import_export',
    
    # Django built-in apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    # Third-party apps
    'django_extensions',
    'phonenumber_field',
    'import_export',
    
    # Local apps
    'hr',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'hr_system.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'hr_system.wsgi.application'

# Database
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation - DISABLED for easier password setting
AUTH_PASSWORD_VALIDATORS = [
    # Commented out to allow simple passwords
    # {
    #     'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    # },
]

# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = config('TIME_ZONE', default='UTC')
USE_I18N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_DIRS = [
    BASE_DIR / 'static',
]

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Email configuration
EMAIL_BACKEND = config('EMAIL_BACKEND', default='django.core.mail.backends.console.EmailBackend')
EMAIL_HOST = config('EMAIL_HOST', default='')
EMAIL_PORT = config('EMAIL_PORT', default=587, cast=int)
EMAIL_HOST_USER = config('EMAIL_HOST_USER', default='')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD', default='')
EMAIL_USE_TLS = config('EMAIL_USE_TLS', default=True, cast=bool)

# Django Unfold Configuration
UNFOLD = {
    "SITE_TITLE": "HR Management System",
    "SITE_HEADER": "HR Admin",
    "SITE_URL": "/",
    # Remove logo references to avoid 404 errors
    # "SITE_ICON": {
    #     "light": lambda request: static("icon-light.svg"),  # light mode
    #     "dark": lambda request: static("icon-dark.svg"),    # dark mode
    # },
    # "SITE_LOGO": {
    #     "light": lambda request: static("logo-light.svg"),  # light mode
    #     "dark": lambda request: static("logo-dark.svg"),    # dark mode
    # },
    "SITE_SYMBOL": "speed",  # symbol from icon set
    # Remove favicon references to avoid 404 errors
    # "SITE_FAVICONS": [
    #     {
    #         "rel": "icon",
    #         "sizes": "32x32", 
    #         "type": "image/svg+xml",
    #         "href": lambda request: static("favicon.svg"),
    #     },
    # ],
    "SHOW_HISTORY": True,
    "SHOW_VIEW_ON_SITE": True,
    "ENVIRONMENT": "hr_system.utils.environment_callback",
    "DASHBOARD_CALLBACK": "hr_system.utils.dashboard_callback",
    "LOGIN": {
        # Remove login background image to avoid 404 errors
        # "image": lambda request: static("login-bg.jpg"),
        "redirect_after": lambda request: reverse_lazy("admin:index"),
    },
    "STYLES": [
        lambda request: static("css/custom-admin.css"),
    ],
    "SCRIPTS": [
        lambda request: static("js/custom-admin.js"),
    ],
    "COLORS": {
        "primary": {
            "50": "250 245 255",
            "100": "243 232 255", 
            "200": "233 213 255",
            "300": "216 180 254",
            "400": "196 181 253",
            "500": "147 51 234",
            "600": "124 58 237",
            "700": "109 40 217",
            "800": "91 33 182",
            "900": "76 29 149",
            "950": "46 16 101",
        },
    },
    "EXTENSIONS": {
        "modeltranslation": {
            "flags": {
                "en": "ðŸ‡ºðŸ‡¸",
                "fr": "ðŸ‡«ðŸ‡·",
                "nl": "ðŸ‡³ðŸ‡±",
            },
        },
    },
    "SIDEBAR": {
        "show_search": True,
        "show_all_applications": True,
        "navigation": [
            {
                "title": "Navigation",
                "separator": True,
                "items": [
                    {
                        "title": "Dashboard",
                        "icon": "dashboard",
                        "link": lambda request: reverse_lazy("admin:index"),
                    },
                    {
                        "title": "Employees",
                        "icon": "people",
                        "link": lambda request: reverse_lazy("admin:hr_employee_changelist"),
                    },
                    {
                        "title": "Departments",
                        "icon": "corporate_fare",
                        "link": lambda request: reverse_lazy("admin:hr_department_changelist"),
                    },
                    {
                        "title": "Positions",
                        "icon": "work",
                        "link": lambda request: reverse_lazy("admin:hr_position_changelist"),
                    },
                ],
            },
            {
                "title": "HR Management",
                "separator": True,
                "items": [
                    {
                        "title": "Leave Requests",
                        "icon": "event_available",
                        "link": lambda request: reverse_lazy("admin:hr_leaverequest_changelist"),
                    },
                    {
                        "title": "Performance Reviews",
                        "icon": "assessment",
                        "link": lambda request: reverse_lazy("admin:hr_performancereview_changelist"),
                    },
                    {
                        "title": "Attendance",
                        "icon": "schedule",
                        "link": lambda request: reverse_lazy("admin:hr_attendance_changelist"),
                    },
                ],
            },
        ],
    },
    "TABS": [
        {
            "models": [
                "hr.employee",
                "hr.department", 
                "hr.position",
            ],
            "items": [
                {
                    "title": "Employee Management",
                    "icon": "people",
                    "link": lambda request: reverse_lazy("admin:hr_employee_changelist"),
                },
                {
                    "title": "Organization",
                    "icon": "corporate_fare", 
                    "link": lambda request: reverse_lazy("admin:hr_department_changelist"),
                },
            ],
        },
    ],
}

# Phone number field configuration
PHONENUMBER_DB_FORMAT = 'E164'
PHONENUMBER_DEFAULT_REGION = 'US'

# File upload settings
FILE_UPLOAD_MAX_MEMORY_SIZE = 10 * 1024 * 1024  # 10MB
DATA_UPLOAD_MAX_MEMORY_SIZE = 10 * 1024 * 1024  # 10MB

# Logging configuration
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'hr_system.log',
        },
        'console': {
            'level': 'DEBUG' if DEBUG else 'INFO',
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console', 'file'],
        'level': 'INFO',
    },
    'loggers': {
        'django': {
            'handlers': ['console', 'file'],
            'level': 'INFO',
            'propagate': False,
        },
        'hr': {
            'handlers': ['console', 'file'],
            'level': 'DEBUG' if DEBUG else 'INFO',
            'propagate': False,
        },
    },
}
